# The majority of this came from https://github.com/tony/tmux-config


# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# set window split
bind-key v split-window -h
bind-key b split-window

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# clock
set-window-option -g clock-mode-colour green #green


set -g status-interval 10   #10s, i think
set -g status-justify centre # center align window list
set -g status-left-length 31
set -g status-right-length 15
set -g status-left '#[fg=green]#H'
set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) #[fg=white,bg=default]%l:%M %p#[default]'


# I'm coming from 'screen' so let's stick with the prefix char I'm used to
set-option -g prefix C-a
set -g prefix C-a

## when using on a local system that's running tmux and you want to connect to remote servers also running tmux
## Ex: Ctrl-a + a + cmd you want == act on remote screen/tmux instance
# Reference: https://leanpub.com/the-tao-of-tmux/read#practical-usage -- Nested tmux
bind-key -n C-a send-prefix

# Ctrl-a Ctrl-a to return to last active window
##bind-key C-a last-window

# Start numbering at 1, because this isn't a damn array
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
#bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
#set -g visual-activity on

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -R
bind k select-pane -U
bind l select-pane -D

# Adjust size of panes - tweaked from https://github.com/deepzz0/dotfiles/blob/master/tmux.conf
bind-key H resize-pane -L 5
bind-key J resize-pane -R 5
bind-key K resize-pane -U 5
bind-key L resize-pane -D 5




bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# color
set -g default-terminal "screen-256color"


# scrolling with the mouse!
set -g mouse on

# increase scrollback buffer
set -g history-limit 50000
